<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hotel.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.hotel.pojo.entity.Account">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="regist_time" property="registTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--前台用户角色关系配置-->
    <resultMap id="AccountRoleResultMap" type="com.hotel.pojo.entity.Account" extends="BaseResultMap">
        <collection property="roleList" ofType="com.hotel.pojo.entity.AccountRole" column="id"
                    select="com.hotel.mapper.AccountRoleMapper.selectAccountRoleByAccountId"/>
    </resultMap>

    <!--根据主键删除前台用户-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM t_account
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <!--新增前台用户-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO t_account (login_name, `password`,
                               real_name, id_card, phone,
                               email, `status`, regist_time)
        VALUES (#{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{realName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{registTime,jdbcType=TIMESTAMP})
    </insert>
    <!--根据id修改前台用户信息-->
    <update id="updateByPrimaryKey" parameterType="com.hotel.pojo.entity.Account">
        UPDATE t_account
        <set>
            <if test="loginName!=null and loginName!=''">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password!=null and password!=''">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName!=null and realName!=''">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="idCard!=null and idCard!=''">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone!=null and phone!=''">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email!=null and email!=''">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="status!=null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="registTime!=null">
                regist_time = #{registTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <!--根据id查询前台用户详情-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT id,
               login_name,
               `password`,
               real_name,
               id_card,
               phone,
               email,
               `status`,
               regist_time
        FROM t_account
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <!--查询所有前台用户信息-->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT id,
               login_name,
               `password`,
               real_name,
               id_card,
               phone,
               email,
               `status`,
               regist_time
        FROM t_account
    </select>

    <!--根据用户名查询用户详情-->
    <select id="selectAccountByName" resultMap="AccountRoleResultMap">
        SELECT id,
               login_name,
               `password`,
               real_name,
               id_card,
               phone,
               email,
               `status`,
               regist_time
        FROM t_account
        WHERE login_name = #{loginName}

    </select>

    <!--查询用户数量-->
    <select id="getAccountCount" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM t_account
        <where>
            <if test="startTime!=null">
                AND <![CDATA[ regist_time >= #{startTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[ regist_time <= #{endTime} ]]>
            </if>
        </where>
    </select>
</mapper>